{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "apimServiceName": {
      "type": "string",
      "defaultValue": "GENERATE",
      "metadata": {
        "description": "Name of API Management Instance. Must be unique. If set to GENERATE, a unique name will be generated."
      }
    },
    "fhirServerUrl": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "URL for server's FHIR endpoint"
      },
      "defaultValue": "http://hapi.fhir.org/baseDstu3/"
    },
    "publisherEmail": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "The email address of the owner of the service"
      }
    },
    "publisherName": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "The name of the owner of the service"
      }
    },
    "sku": {
      "type": "string",
      "allowedValues": [
        "Developer",
        "Standard",
        "Premium"
      ],
      "defaultValue": "Developer",
      "metadata": {
        "description": "The pricing tier of this API Management service"
      }
    },
    "skuCount": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "The instance size of this API Management service."
      }
    },
    "fhirSwaggerConverterUrl": {
      "type": "string",
      "defaultValue": "https://fhir2apim.azurewebsites.net",
      "metadata": {
        "description": "URL for server providing conformance statement to Swagger file conversion service"
      }
    },
    "interactionList": {
      "type": "string",
      "defaultValue": "all",
      "metadata": {
        "description": "Comma separated list of FHIR interactions to include. Defaults to all"
      }
    },
    "resourceList": {
      "type": "string",
      "defaultValue": "all",
      "metadata": {
        "description": "Comma separated list of FHIR resource to include. Defaults to all"
      }
    },
    "apiName": {
      "type": "string",
      "defaultValue": "FHIRAPI",
      "metadata": {
        "description": "Name of FHIR API"
      }
    },
    "apiPath": {
      "type": "string",
      "defaultValue": "fhir",
      "metadata": {
        "description": "Path in API Management, e.g. fhir"
      }
    },
    "apiProductName": {
      "type": "string",
      "defaultValue": "FHIR",
      "metadata": {
        "description": "Name of API Product"
      }
    },
    "subscriptionRequired": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Require subscription key to access api"
      }
    },
    "oauthAuthority": {
      "type": "string",
      "defaultValue": "https://login.microsoftonline.com/common",
      "metadata": {
        "description": "The OAuth provider/sauthority"
      }
    },
    "oauthClientId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Client application id"
      }
    },
    "oauthClientSecret": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Client application secret"        
      }
    },
    "oauthAudience": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Audience (aud claim in token) for OAuth"
      }
    },
    "oauthAADTenantId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Azure AD Tenant ID"
      }
    }
  },
  "variables": {
    "apiManagementServiceName": "[if(equals(parameters('apimServiceName'),'GENERATE'), concat('fhirapiservice', uniqueString(resourceGroup().id)), parameters('apimServiceName'))]",
    "apiManagementApiName": "[concat(variables('apiManagementServiceName'),'/', parameters('apiName'))]",
    "swaggerUrl": "[concat(parameters('fhirSwaggerConverterUrl'),'/api/Swagger?fhirserver=',parameters('fhirServerUrl'),'&interaction_list=', parameters('interactionList'), '&resource_list=', parameters('resourceList'))]",
    "apiProductTemplateUrl": "[concat(parameters('fhirSwaggerConverterUrl'), '/azuredeploy-api-product.json')]",
    "deployOAuth": "[and(and(and(not(empty(parameters('oauthClientId'))), not(empty(parameters('oauthClientSecret')))), not(empty(parameters('oauthAudience')))), not(empty(parameters('oauthAADTenantId'))))]",
    "apiOAuthProviderTemplateUrl": "[concat(parameters('fhirSwaggerConverterUrl'), '/azuredeploy-oauth-provider.json')]",
    "apiOAuthTemplateUrl": "[concat(parameters('fhirSwaggerConverterUrl'), '/azuredeploy-api-oauth.json')]",
    "apiOAuthPolicyTemplateUrl": "[concat(parameters('fhirSwaggerConverterUrl'), '/azuredeploy-api-policy.json')]",
    "apiOAuthPolicyUrl": "[concat(parameters('fhirSwaggerConverterUrl'), '/api-policy.xml')]"
  },
  "resources": [
    {
      "apiVersion": "2018-01-01",
      "name": "[variables('apiManagementServiceName')]",
      "type": "Microsoft.ApiManagement/service",
      "location": "[resourceGroup().location]",
      "tags": {},
      "sku": {
        "name": "[parameters('sku')]",
        "capacity": "[parameters('skuCount')]"
      },
      "properties": {
        "publisherEmail": "[parameters('publisherEmail')]",
        "publisherName": "[parameters('publisherName')]"
      },
      "resources": []
    },
    {
      "apiVersion": "2017-03-01",
      "type": "Microsoft.ApiManagement/service/apis",
      "name": "[variables('apiManagementApiName')]",
      "dependsOn": [
        "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'))]"
      ],
      "properties": {
        "contentFormat": "SwaggerLinkJson",
        "contentValue": "[variables('swaggerUrl')]",
        "path": "[parameters('apiPath')]"
      }
    },
    {
      "name": "ApiProduct",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "dependsOn": [
        "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/apis/', parameters('apiName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('apiProductTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "apimInstanceName": {
            "value": "[variables('apiManagementServiceName')]"
          },
          "apiName": {
            "value": "[parameters('apiName')]"
          },
          "productName": {
            "value": "[parameters('apiProductName')]"
          },
          "subscriptionRequired": {
            "value": "[parameters('subscriptionRequired')]"
          }
        }
      }
    },
    {
      "name": "ApiOAuthProvider",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "condition": "[variables('deployOAuth')]",
      "dependsOn": [
        "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/apis/', parameters('apiName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('apiOAuthProviderTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "apimInstanceName": {
            "value": "[variables('apiManagementServiceName')]"
          },
          "authority": {
            "value": "[parameters('oauthAuthority')]"
          },
          "clientId": {
            "value": "[parameters('oauthClientId')]"
          },
          "clientSecret": {
            "value": "[parameters('oauthClientSecret')]"
          },
          "audience": {
            "value": "[parameters('oauthAudience')]"
          }
        }
      }
    },
    {
      "name": "ApiEnableOauth",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "condition": "[variables('deployOAuth')]",
      "dependsOn": [
        "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/apis/', parameters('apiName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('apiOAuthTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "apimInstanceName": {
            "value": "[variables('apiManagementServiceName')]"
          },
          "apiName": {
            "value": "[parameters('apiName')]"
          },
          "apiPath": {
            "value": "[parameters('apiPath')]"
          },
          "authorizationServerId": {
            "value": "oauthServer"
          },
          "protocols": {
            "value": "[reference(resourceId('Microsoft.ApiManagement/service/apis',variables('apiManagementServiceName'),parameters('apiName'))).protocols]"
          },
          "serviceUrl": {
            "value": "[reference(resourceId('Microsoft.ApiManagement/service/apis',variables('apiManagementServiceName'),parameters('apiName'))).serviceUrl]"
          }
        }
      }
    },
    {
      "name": "ApiOauthPolicy",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "condition": "[variables('deployOAuth')]",
      "dependsOn": [
        "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/apis/', parameters('apiName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('apiOAuthPolicyTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "apimInstanceName": {
            "value": "[variables('apiManagementServiceName')]"
          },
          "apiName": {
            "value": "[parameters('apiName')]"
          },
          "policyUrl": {
            "value": "[variables('apiOAuthPolicyUrl')]"
          },
          "aadTenant": {
            "value": "[parameters('oauthAADTenantId')]"
          },
          "audience": {
            "value": "[parameters('oauthAudience')]"
          }
        }
      }
    }
  ]
}